name: Corelight x509
description: ''
timeSelector: {}
sharedTimeInterval:
  enabled: true
  isLive: false
  start: 1d
labels:
- Corelight
- Data
widgets:
  b73340f1-5ede-4d9e-930e-164e77d5e456:
    x: 0
    height: 5
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(field=#event.dataset, values=["ndr.x509", "ndr.x509_red"])
      | in(field=observer.hostname, values=[?system_name])
      | ?{additional_filter=*}
      | groupBy([Vendor.certificate.not_valid_after,Vendor.certificate.subject], function=[], limit=max)
      | ts_now := now()
      | parseTimestamp(field=Vendor.certificate.not_valid_after, as=ts_then)
      | now_now := ts_now-ts_then
      | now_now := round(now_now)
      | now_now > 0
      | sort(field=Vendor.certificate.not_valid_after, order=asc, limit=max)
      | select([Vendor.certificate.not_valid_after, Vendor.certificate.subject])
      | rename([[Vendor.certificate.not_valid_after, "Certificate Not Valid After"], [Vendor.certificate.subject, "Certificate Subject"]])
    end: now
    start: 1d
    width: 12
    y: 6
    interactions:
    - name: 'Details of certificate expiration'
      titleTemplate: 'Details of certificate : {{ fields["Certificate Subject"] }}
        and expiry date : {{ fields["Certificate Not Valid After"] }}'
      queryString: |
        #Vendor = corelight and #event.module = ndr
        | in(field=#event.dataset, values=["ndr.x509", "ndr.x509_red"])
        | in(field=observer.hostname, values=[?system_name])
        | ?additional_filter
        | Vendor.certificate.subject = ?subject AND Vendor.certificate.not_valid_after = ?expiry_time_stamp
      useWidgetTimeWindow: true
      arguments:
        additional_filter: '["{{ parameters.additional_filter }}"]'
        expiry_time_stamp: '["{{ fields[\"Certificate Not Valid After\"] }}"]'
        subject: '["{{ fields[\"Certificate Subject\"] }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      cell-overflow: wrap-text
      configured-columns: {}
      row-numbers-enabled: false
    visualization: table-view
    title: x509 expired certificates
    isLive: false
    type: query
  c67041b9-f8e6-4f85-8178-57ce67f280c0:
    x: 6
    height: 5
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(field=#event.dataset, values=["ndr.x509", "ndr.x509_red", "ndr.ssl", "ndr.ssl_red", "ndr.conn", "ndr.conn_long", "ndr.conn_red"])
      | in(field=observer.hostname, values=[?system_name])
      | ?{additional_filter=*}
      | is_src_internal_ip := if(cidr(source.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(source.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(source.ip, subnet="192.168.0.0/16"), then=true, else=false)))
      | is_dest_internal_ip := if(cidr(destination.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(destination.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(destination.ip, subnet="192.168.0.0/16"), then=true, else=false)))
      | case {
          is_src_internal_ip=true and is_dest_internal_ip=true
          | direction := "internal";
          is_src_internal_ip=true and is_dest_internal_ip=false
          | direction := "outbound";
          is_src_internal_ip=false and is_dest_internal_ip=false
          | direction := "external";
          is_src_internal_ip=false and is_dest_internal_ip=true
          | direction := "inbound";
          *
          | direction := "unknown"
      }
      | direction=?{direction=*}
      | groupBy([Vendor.certificate.subject],limit=max)
      | sort(_count, order=asc, limit=10)
      | rename([[_count, Count], [Vendor.certificate.subject, "SSL Subject"]])
    end: now
    start: 1d
    width: 6
    y: 1
    interactions:
    - name: Details of x509 Rare Subjects
      titleTemplate: Details of {{ fields["SSL Subject"] }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(field=#event.dataset, values=["ndr.x509", "ndr.x509_red", "ndr.ssl", "ndr.ssl_red", "ndr.conn", "ndr.conn_long", "ndr.conn_red"])
        | in(field=observer.hostname, values=[?system_name])
        | ?additional_filter
        | is_src_internal_ip := if(cidr(source.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(source.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(source.ip, subnet="192.168.0.0/16"), then=true, else=false)))
        | is_dest_internal_ip := if(cidr(destination.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(destination.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(destination.ip, subnet="192.168.0.0/16"), then=true, else=false)))
        | case {
            is_src_internal_ip=true and is_dest_internal_ip=true
            | direction := "internal";
            is_src_internal_ip=true and is_dest_internal_ip=false
            | direction := "outbound";
            is_src_internal_ip=false and is_dest_internal_ip=false
            | direction := "external";
            is_src_internal_ip=false and is_dest_internal_ip=true
            | direction := "inbound";
            *
            | direction := "unknown"
        }
        | direction=?direction
        | Vendor.certificate.subject = ?ssl_subject
      useWidgetTimeWindow: true
      arguments:
        additional_filter: '["{{ parameters.additional_filter }}"]'
        direction: '["{{ parameters.direction }}"]'
        ssl_subject: '["{{ fields[\"SSL Subject\"] }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      cell-overflow: wrap-text
      configured-columns: {}
      row-numbers-enabled: false
    visualization: table-view
    title: x509 rare subjects
    isLive: false
    type: query
  fcc40a8f-7f51-41e2-be82-cecb32ce91fe:
    x: 0
    height: 5
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(field=#event.dataset, values=["ndr.x509", "ndr.x509_red", "ndr.ssl", "ndr.ssl_red", "ndr.conn", "ndr.conn_long", "ndr.conn_red"])
      | in(field=observer.hostname, values=[?system_name])
      | ?{additional_filter=*}
      | is_src_internal_ip := if(cidr(source.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(source.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(source.ip, subnet="192.168.0.0/16"), then=true, else=false)))
      | is_dest_internal_ip := if(cidr(destination.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(destination.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(destination.ip, subnet="192.168.0.0/16"), then=true, else=false)))
      | case {
          is_src_internal_ip=true and is_dest_internal_ip=true
          | direction := "internal";
          is_src_internal_ip=true and is_dest_internal_ip=false
          | direction := "outbound";
          is_src_internal_ip=false and is_dest_internal_ip=false
          | direction := "external";
          is_src_internal_ip=false and is_dest_internal_ip=true
          | direction := "inbound";
          *
          | direction := "unknown"
      }
      | direction=?{direction=*}
      | top([Vendor.certificate.subject], percent=true)
      | format(format="%.2f", field=percent, as=Percent)
      | rename([[_count, Count], [Vendor.certificate.subject, "SSL Subject"]])
      | drop(percent)
    end: now
    start: 'calendar: now@y'
    width: 6
    y: 1
    interactions:
    - name: Details of x509 top subjects
      titleTemplate: Details of {{ fields["SSL Subject"] }}
      queryString: "#Vendor = corelight and #event.module = \"ndr\"\n| in(field=\"#event.dataset\", values=[\"ndr.x509\", \"ndr.x509_red\", \"ndr.ssl\", \"ndr.ssl_red\", \"ndr.conn\"\
        , \"ndr.conn_long\", \"ndr.conn_red\"])\n| in(field=\"observer.hostname\", values=[?system_name])\n| ?additional_filter\n\
        | is_src_internal_ip := if(cidr(source.ip, subnet=\"10.0.0.0/8\"), then=true,\
        \ else=if(cidr(source.ip, subnet=\"172.16.0.0/12\"), then=true, else=if(cidr(source.ip,\
        \ subnet=\"192.168.0.0/16\"), then=true, else=false)))\n| is_dest_internal_ip\
        \ := if(cidr(destination.ip, subnet=\"10.0.0.0/8\"), then=true, else=if(cidr(destination.ip,\
        \ subnet=\"172.16.0.0/12\"), then=true, else=if(cidr(destination.ip, subnet=\"\
        192.168.0.0/16\"), then=true, else=false)))\n| case {\n    is_src_internal_ip=true\
        \ and is_dest_internal_ip=true\n    | direction := \"internal\";\n    is_src_internal_ip=true\
        \ and is_dest_internal_ip=false\n    | direction := \"outbound\";\n    is_src_internal_ip=false\
        \ and is_dest_internal_ip=false\n    | direction := \"external\";\n    is_src_internal_ip=false\
        \ and is_dest_internal_ip=true\n    | direction := \"inbound\";\n    *\n \
        \   | direction := \"unknown\"\n}\n| direction=?direction \n| Vendor.certificate.subject\
        \ = ?ssl_subject"
      useWidgetTimeWindow: true
      arguments:
        additional_filter: '["{{ parameters.additional_filter }}"]'
        direction: '["{{ parameters.direction }}"]'
        ssl_subject: '["{{ fields[\"SSL Subject\"] }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      cell-overflow: wrap-text
      configured-columns: {}
      row-numbers-enabled: false
    visualization: table-view
    title: x509 top subjects
    isLive: false
    type: query
  note-1734413690233-0:
    x: 0
    y: 0
    description: x509 analysis is only available for data extracted by Corelight Sensors
      (open source Zeek sensors not supported)
    height: 1
    text: ''
    width: 12
    title: x509
    type: note
$schema: https://schemas.humio.com/dashboard/v0.17.0
parameters:
  additional_filter:
    label: Additional filter
    order: 3
    type: text
    defaultValue: '*'
    width: 1
  direction:
    label: Direction
    order: 2
    values:
      '*': All
      inbound: Inbound
      outbound: Outbound
      internal: Internal
      external: External
    type: list
    defaultValue: '*'
    width: 1
  system_name:
    label: Corelight sensor
    query: |-
      #Vendor = corelight and #event.module = ndr
      | groupBy([observer.hostname], function=[])
    timeInterval: 24h
    useDashboardTimeIfSet: true
    type: query
    defaultValue: '*'
    width: 1
    order: 1
    valueField: observer.hostname
