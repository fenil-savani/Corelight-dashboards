name: Corelight ip interrogation
description: ''
timeSelector: {}
sharedTimeInterval:
  enabled: true
  isLive: false
  start: 1d
labels:
- Corelight
- Security Workflow
widgets:
  386b9584-79d7-4c1b-9892-1e7de62dbd39:
    x: 6
    height: 4
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(field=observer.hostname, values=[?system_name])
      | (source.ip=?{ip=*} or destination.ip=?{ip=*})
      | is_dest_internal_ip := if(cidr(destination.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(destination.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(destination.ip, subnet="192.168.0.0/16"), then=true, else=false)))
      | direction := if(is_dest_internal_ip==true, then="Internal", else=if(is_dest_internal_ip==false, then="External", else="Unknown"))
      | top(direction)
    end: now
    start: 24h
    width: 6
    y: 1
    interactions:
    - name: Details of internal vs external
      titleTemplate: Details of {{ fields.direction }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | is_dest_internal_ip := if(cidr(destination.ip, subnet="10.0.0.0/8"), then=true, else=if(cidr(destination.ip, subnet="172.16.0.0/12"), then=true, else=if(cidr(destination.ip, subnet="192.168.0.0/16"), then=true, else=false)))
        | direction := if(is_dest_internal_ip==true, then="Internal", else=if(is_dest_internal_ip==false, then="External", else="Unknown"))
        | direction=?chart_direction
      useWidgetTimeWindow: true
      arguments:
        chart_direction: '["{{ fields.direction }}"]'
        ip: '["{{ parameters.ip }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      series: {}
      maxSeriesCount: 10
      innerRadius: 0
      legendPosition: right
      legendTitle: Direction
    visualization: pie-chart
    title: Connections - internal vs external
    isLive: false
    type: query
  688c3dc5-9c8f-4dd4-a8fb-a9ed8da8ec1f:
    x: 0
    height: 5
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(#event.dataset, values=["ndr.http", "ndr.http2", "ndr.http_red"])
      | in(field=observer.hostname, values=[?system_name])
      | (source.ip=?{ip=*} or destination.ip=?{ip=*})
      | top([destination.ip, source.ip, http.request.method, url.path])
      | default(value="unknown", field=[destination.ip, source.ip, http.request.method, url.path])
      | rename([[destination.ip, "Destination IP"], [source.ip, "Source IP"], [http.request.method, "Method"], [url.path, "URI"], [_count, Count]])
    end: now
    start: 24h
    width: 12
    y: 10
    interactions:
    - name: Details of top destination ip, method, & uri
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(#event.dataset, values=["ndr.http", "ndr.http2", "ndr.http_red"])
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | source.ip=?src_ip and destination.ip=?dst_ip and http.request.method=?method and url.path=?uri
      useWidgetTimeWindow: true
      arguments:
        ip: '["{{ parameters.ip }}"]'
        uri: '["{{ fields.URI }}"]'
        src_ip: '["{{ fields[\"Source IP\"] }}"]'
        system_name: '["{{ parameters.system_name }}"]'
        dst_ip: '["{{ fields[\"Destination IP\"] }}"]'
        method: '["{{ fields.Method }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      cell-overflow: wrap-text
      configured-columns: {}
      row-numbers-enabled: false
    visualization: table-view
    title: HTTP - top Destination ip, method, & uri
    isLive: false
    type: query
  note-1734440593707-0:
    x: 0
    y: 0
    description: Corelight data for IP under investigation
    height: 1
    text: ''
    width: 12
    title: IP interrogation
    type: note
  a77364af-464d-4850-898d-56e22df3ef21:
    x: 4
    height: 4
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(#event.dataset, values=["ndr.http", "ndr.http2", "ndr.http_red"])
      | in(field=observer.hostname, values=[?system_name])
      | (source.ip=?{ip=*} or destination.ip=?{ip=*})
      | groupBy([Vendor.user_agent], limit=max)
      | sort(_count, order=asc, limit=10)
    end: now
    start: 24h
    width: 4
    y: 15
    interactions:
    - name: Details of rare user agents
      titleTemplate: Details of {{ fields.Vendor.user_agent }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(#event.dataset, values=["ndr.http", "ndr.http2", "ndr.http_red"])
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | Vendor.user_agent=?user_agent
      useWidgetTimeWindow: true
      arguments:
        ip: '["{{ parameters.ip }}"]'
        system_name: '["{{ parameters.system_name }}"]'
        user_agent: '["{{ fields.Vendor.user_agent }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      series: {}
      maxLegendRows: 2
      maxSeriesCount: 10
      innerRadius: 0
      legendPosition: bottom
      legendTitle: User Agent
    visualization: pie-chart
    title: HTTP - rare user agents
    isLive: false
    type: query
  9ac59228-7821-465a-8b42-f0aad2dc6772:
    x: 8
    height: 4
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(#event.dataset, values=["ndr.conn", "ndr.conn_red", "ndr.conn_long", "ndr.dns", "ndr.dns_red", "ndr.files", "ndr.files_red", "ndr.http", "ndr.http2", "ndr.http_red", "ndr.ssl", "ndr.ssl_red", "ndr.smtp"])
      | in(field=observer.hostname, values=[?system_name])
      | (source.ip=?{ip=*} or destination.ip=?{ip=*})
      | in(field="destination.port", values=[80, 8080, 443])
      | top([destination.port])
    end: now
    start: 24h
    width: 4
    y: 15
    interactions:
    - name: Details of web ports breakdown
      titleTemplate: Details of {{ fields.destination.port }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(#event.dataset, values=["ndr.conn", "ndr.conn_red", "ndr.conn_long", "ndr.dns", "ndr.dns_red", "ndr.files", "ndr.files_red", "ndr.http", "ndr.http2", "ndr.http_red", "ndr.ssl", "ndr.ssl_red"])
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | destination.port=?port
      useWidgetTimeWindow: true
      arguments:
        ip: '["{{ parameters.ip }}"]'
        port: '["{{ fields.destination.port }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      series: {}
      maxLegendRows: 2
      maxSeriesCount: 10
      innerRadius: 0
      legendPosition: bottom
      legendTitle: Destination Port
    visualization: pie-chart
    title: HTTP - web ports breakdown
    isLive: false
    type: query
  dd09419e-78fb-4667-8dbb-7c14e6e50630:
    x: 0
    height: 4
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | !in(Vendor._path, values=["conn", "conn_red", "conn_long", "dns", "dns_red", "files", "files_red", "http", "http2", "http_red", "ssl", "ssl_red", "smtp"])
      | in(field=observer.hostname, values=[?system_name])
      |(source.ip=?{ip=*} or destination.ip=?{ip=*})
      | top([Vendor._path])
    end: now
    start: 'calendar: now@y'
    width: 4
    y: 15
    interactions:
    - name: Details of corelight supporting data sources for source
      titleTemplate: Details of {{ fields.Vendor._path }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | Vendor._path=?sourcetype
      useWidgetTimeWindow: true
      arguments:
        ip: '["{{ parameters.ip }}"]'
        sourcetype: '["{{ fields.Vendor._path }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      series: {}
      maxLegendRows: 2
      maxSeriesCount: 10
      innerRadius: 0
      legendPosition: bottom
      legendTitle: Source Type
    visualization: pie-chart
    title: Corelight data sets - corelight supporting sata sources for source
    isLive: false
    type: query
  30c37611-749f-40d1-b70e-085f1d9adff0:
    x: 0
    height: 5
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(#event.dataset, values=["ndr.conn", "ndr.conn_red", "ndr.conn_long", "ndr.dns", "ndr.dns_red", "ndr.files", "ndr.files_red", "ndr.http", "ndr.http2", "ndr.http_red", "ndr.ssl", "ndr.ssl_red", "ndr.smtp"])
      | in(field=observer.hostname, values=[?system_name])
      | (source.ip=?{ip=*} or destination.ip=?{ip=*})
      | case {
          in(field="source.ip", values=["0.0.0.0", "255.255.255.255"]) |
          is_broadcast := true;
          in(field="destination.ip", values=["255.255.255.255", "0.0.0.0"]) |
          is_broadcast := true;
          * |
          is_broadcast := false;
      }
      | is_broadcast = false
      | !"192.168.0.255"
      | format(format="%s/%s", field=[network.transport, destination.port], as=pr)
      | groupBy([source.ip, destination.ip, event.id], function=[collect([pr], separator=","), sum("network.bytes", as=Bytes)], limit=max)
      | sort(Bytes, order=desc, limit=10)
      | ipLocation(destination.ip)
      | default(value="unknown", field=[source.ip, destination.ip, event.id, pr, destination.ip.country])
      | default(value="0", field=[Bytes])
      | rename([[source.ip, "Source IP"],[destination.ip, "Destination IP"], [pr, Service], [event.id, UID], [destination.ip.country, Country]])
      | select(["Source IP", "Destination IP", Service, UID, Country, Bytes])
    end: now
    start: 'calendar: now@y'
    width: 12
    y: 5
    interactions:
    - name: Details of top connections/services by bytes transferred
      titleTemplate: Details of {{ fields.UID }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(#event.dataset, values=["ndr.conn", "ndr.conn_red", "ndr.conn_long", "ndr.dns", "ndr.dns_red", "ndr.files", "ndr.files_red", "ndr.http", "ndr.http2", "ndr.http_red", "ndr.ssl", "ndr.ssl_red"])
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | case {
            in(field="source.ip", values=["0.0.0.0", "255.255.255.255"]) |
            is_broadcast := true;
            in(field="destination.ip", values=["255.255.255.255", "0.0.0.0"]) |
            is_broadcast := true;
            * |
            is_broadcast := false;
        }
        | is_broadcast = false
        | !"192.168.0.255"
        | format(format="%s/%s", field=[network.transport, destination.port], as=pr)
        | ipLocation(destination.ip)
        | default(value="unknown", field=[source.ip, destination.ip, event.id, pr, destination.ip.country])
        | default(value="0", field=[Bytes])
        | rename([[source.ip, Source], [destination.ip, Destination], [pr, Service], [event.id, UID], [destination.ip.country, Country]])
        | UID=?table_uid
      useWidgetTimeWindow: true
      arguments:
        ip: '["{{ parameters.ip }}"]'
        system_name: '["{{ parameters.system_name }}"]'
        table_uid: '["{{ fields.UID }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      cell-overflow: wrap-text
      configured-columns:
        Bytes:
          data-type: bytes
      row-numbers-enabled: false
    visualization: table-view
    title: Connections - top connections/services by bytes transferred
    isLive: false
    type: query
  d693ac88-8ff0-4314-af48-f315ab05fbf6:
    x: 0
    height: 4
    queryString: |-
      #Vendor = corelight and #event.module = ndr
      | in(#event.dataset, values=["ndr.conn", "ndr.conn_red", "ndr.conn_long", "ndr.dns", "ndr.dns_red", "ndr.files", "ndr.files_red", "ndr.http", "ndr.http2", "ndr.http_red", "ndr.ssl", "ndr.ssl_red", "ndr.smtp"])
      | in(field=observer.hostname, values=[?system_name])
      | (source.ip=?{ip=*} or destination.ip=?{ip=*})
      | !in(field=destination.port, values=[80,443,8080])
      | format("%s/%s", field=[network.transport, destination.port], as=tp)
      | top(tp, limit=10)
    end: now
    start: 24h
    width: 6
    y: 1
    interactions:
    - name: Details of top non-web protocol usage
      titleTemplate: Details of {{ fields.tp }}
      queryString: |-
        #Vendor = corelight and #event.module = ndr
        | in(#event.dataset, values=["ndr.conn", "ndr.conn_red", "ndr.conn_long", "ndr.dns", "ndr.dns_red", "ndr.files", "ndr.files_red", "ndr.http", "ndr.http2", "ndr.http_red", "ndr.ssl", "ndr.ssl_red"])
        | in(field=observer.hostname, values=[?system_name])
        | (source.ip=?ip or destination.ip=?ip)
        | !in(field=destination.port, values=[80,443,8080])
        | format("%s/%s", field=[network.transport, destination.port], as=tp)
        | tp=?chart_tp
      useWidgetTimeWindow: true
      arguments:
        chart_tp: '["{{ fields.tp }}"]'
        ip: '["{{ parameters.ip }}"]'
        system_name: '["{{ parameters.system_name }}"]'
      openInNewTab: true
      isLive: false
      type: searchlink
    options:
      xAxisTitle: Protocol/Port
      yAxisTitle: Count
      maxSeriesCount: 10
      series: {}
    visualization: bar-chart
    title: Connections - top non-web protocol usage
    isLive: false
    type: query
$schema: https://schemas.humio.com/dashboard/v0.20.0
parameters:
  ip:
    label: IP
    order: 50
    type: text
    defaultValue: '*'
    width: 1
  system_name:
    label: Corelight sensor
    query: |-
      #Vendor = corelight and @event_parsed!="false"
      | groupBy([observer.hostname],function=[])
    timeInterval: 24h
    useDashboardTimeIfSet: true
    type: query
    defaultValue: '*'
    width: 1
    order: 10
    valueField: observer.hostname
